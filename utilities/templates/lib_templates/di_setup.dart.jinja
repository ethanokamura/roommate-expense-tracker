import 'package:api_client/api_client.dart';
{% for repo in repositories %}
import 'package:{{ repo }}_repository/{{ repo }}_repository.dart';
{% endfor %}

{{ header }}

final getIt = GetIt.instance;

Future<void> setupDependencies({
  required Isar isarInstance,
  required GoogleSignIn googleSignIn,
  required FirebaseAuth firebaseAuth,
}) async {
  // Register Dependencies
  getIt.registerLazySingleton<Isar>(() => isarInstance);
  getIt.registerLazySingleton<GoogleSignIn>(() => googleSignIn);
  getIt.registerLazySingleton<FirebaseAuth>(() => firebaseAuth);
  // Register CacheManager, which depends on Isar
  getIt.registerLazySingleton<CacheManager>(() => CacheManager(getIt<Isar>()));
  // Register all your repositories as lazy singletons
{% for repo in repositories %}
  getIt.registerSingletonWithDependencies<{{repo | snake_to_pascal}}Repository>(
      () => {{repo | snake_to_pascal}}Repository(
        cacheManager: getIt<CacheManager>(),
        {% if repo == "users_repository" %}
        googleSignIn: getIt<GoogleSignIn>(),
        firebaseAuth: getIt<FirebaseAuth>(),
        {%endif%}
      ),
    dependsOn: [CacheManager {% if repo == "users_repository" %}, GoogleSignIn, FirebaseAuth {%endif%}],
  );
{% endfor %}
}
