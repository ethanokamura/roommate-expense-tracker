import 'package:api_client/api_client.dart';
import 'package:credentials_repository/credentials_repository.dart';
{% for repo in repositories %}
import 'package:{{ repo }}_repository/{{ repo }}_repository.dart';
{% endfor %}

{{ header }}

final getIt = GetIt.instance;

void setupDependencies(Isar isarInstance) {
  // Register Isar if not already done. Pass the instance from openIsar().
  // This is typically called from main.dart after Isar.open().
  getIt.registerLazySingleton<Isar>(() => isarInstance);

  // Register all your repositories as lazy singletons
{% for repo in repositories %}
  getIt.registerLazySingleton<{{repo | snake_to_pascal}}Repository>(
      () => {{repo | snake_to_pascal}}Repository(cacheManager: getIt<CacheManager>(),),);
{% endfor %}
  getIt.registerLazySingleton<CredentialsRepository>(
    () => CredentialsRepository(
      cacheManager: getIt<CacheManager>(),
      dio: Dio(),
    ),
  );
}
